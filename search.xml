<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>R语言面向对象</title>
    <url>/2020/10/20/R%E8%AF%AD%E8%A8%80%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h4 id="对象定义方式setClass"><a href="#对象定义方式setClass" class="headerlink" title="对象定义方式setClass()"></a>对象定义方式setClass()</h4><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">RGBcolor &lt;- setClass(</span><br><span class="line">  <span class="comment"># 类名</span></span><br><span class="line">  <span class="string">&quot;RGBcolor&quot;</span>,</span><br><span class="line">  <span class="comment"># 数据列表,用slots表示</span></span><br><span class="line">  slots = <span class="built_in">c</span>(r = <span class="string">&quot;integer&quot;</span>,</span><br><span class="line">            g = <span class="string">&quot;integer&quot;</span>,</span><br><span class="line">            b = <span class="string">&quot;integer&quot;</span>,</span><br><span class="line">            label = <span class="string">&quot;character&quot;</span>),</span><br><span class="line">  <span class="comment">#其他辅助元素，prototype参数用来设定初始值</span></span><br><span class="line">  prototype = <span class="built_in">list</span>(r = <span class="number">0L</span>,</span><br><span class="line">                   g = <span class="number">0L</span>,</span><br><span class="line">                   b = <span class="number">0L</span>,</span><br><span class="line">                   label = <span class="string">&quot;#00000&quot;</span></span><br><span class="line">  ),</span><br><span class="line">  <span class="comment"># 合法性检查</span></span><br><span class="line">  validity = <span class="keyword">function</span>(object)&#123;</span><br><span class="line">    <span class="keyword">if</span>(object@r&lt;<span class="number">0</span> | object@g&lt;<span class="number">0</span> | object@b&lt;<span class="number">0</span>)&#123;</span><br><span class="line">      <span class="built_in">return</span>(<span class="string">&quot;rediculous!&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(object@r&gt;<span class="number">255</span> | object@g&gt;<span class="number">255</span> | object@b&gt;<span class="number">255</span>)&#123;</span><br><span class="line">      <span class="built_in">return</span>(<span class="string">&quot;rediculous!&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span>(<span class="built_in">T</span>)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"><span class="comment"># 实例化一个对象</span></span><br><span class="line">c1 &lt;- RGBcolor(r=<span class="number">20L</span>,g=<span class="number">20L</span>,b=<span class="number">20L</span>,label = <span class="string">&quot;#8c567f&quot;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">showClass(<span class="string">&quot;RGBcolor&quot;</span>)</span><br><span class="line">showMethods(<span class="string">&quot;RGBcolor&quot;</span>)</span><br><span class="line"></span><br><span class="line">Class <span class="string">&quot;RGBcolor&quot;</span> [<span class="keyword">in</span> <span class="string">&quot;.GlobalEnv&quot;</span>]</span><br><span class="line">Slots:                                           </span><br><span class="line">Name:          r         g         b     label</span><br><span class="line">Class:   integer   integer   integer character</span><br><span class="line"></span><br><span class="line">Function <span class="string">&quot;RGBcolor&quot;</span>:</span><br><span class="line"> &lt;not an S4 generic <span class="keyword">function</span>&gt;</span><br></pre></td></tr></table></figure>

<h4 id="通过绑定构造函数的方式进行初值的处理，绑定方法使用setMethod-函数来进行，实际上绑定的是泛型函数"><a href="#通过绑定构造函数的方式进行初值的处理，绑定方法使用setMethod-函数来进行，实际上绑定的是泛型函数" class="headerlink" title="通过绑定构造函数的方式进行初值的处理，绑定方法使用setMethod()函数来进行，实际上绑定的是泛型函数"></a>通过绑定构造函数的方式进行初值的处理，绑定方法使用setMethod()函数来进行，实际上绑定的是泛型函数</h4><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">setMethod(<span class="string">&quot;initialize&quot;</span>,signature(.Object = <span class="string">&quot;RGBcolor&quot;</span>),</span><br><span class="line">          <span class="keyword">function</span>(.Object, r = <span class="number">0L</span>, g = <span class="number">0L</span>,b = <span class="number">0L</span>)&#123;</span><br><span class="line">            .Object@r = <span class="built_in">as.integer</span>(r)</span><br><span class="line">            .Object@g = <span class="built_in">as.integer</span>(g)</span><br><span class="line">            .Object@b = <span class="built_in">as.integer</span>(b)</span><br><span class="line">			hx &lt;- as.hexmode(<span class="built_in">c</span>(r,g,b))</span><br><span class="line">            .Object@label=paste(<span class="built_in">c</span>(<span class="string">&quot;#&quot;</span>,format(hx,width = <span class="number">2</span>)),collapse = <span class="string">&quot;&quot;</span>)</span><br><span class="line">           <span class="keyword">if</span>(.Object@r&gt;<span class="number">255</span> | .Object@g&gt;<span class="number">255</span> | .Object@b&gt;<span class="number">255</span>)&#123;</span><br><span class="line">              cat(<span class="string">&quot;warning!RGB can&#x27;t &gt;255!&quot;</span>)</span><br><span class="line">             <span class="comment">#想要停止构造对象</span></span><br><span class="line">             <span class="comment"># stop(&quot;rediculous&quot;) </span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span>(.Object)</span><br><span class="line">          &#125;                    </span><br><span class="line">         )</span><br><span class="line"></span><br><span class="line">c1 &lt;- RGBcolor(r = <span class="number">2000</span>,g = <span class="number">60</span> ,b = <span class="number">135</span>)</span><br><span class="line">warning!RGB can<span class="string">&#x27;t &gt;255!</span></span><br><span class="line"><span class="string">#=======================================</span></span><br><span class="line"><span class="string">view(initialize)</span></span><br><span class="line"><span class="string">target = new(&quot;signature&quot;, .Data = &quot;ANY&quot;, names = &quot;.Object&quot;, </span></span><br><span class="line"><span class="string">      package = &quot;methods&quot;), defined = new(&quot;signature&quot;, </span></span><br><span class="line"><span class="string">      .Data = &quot;ANY&quot;, names = &quot;.Object&quot;, package = &quot;methods&quot;), </span></span><br><span class="line"><span class="string">    generic = &quot;initialize&quot;) </span></span><br></pre></td></tr></table></figure>

<h4 id="创建新的泛型函数-类似于抽象方法"><a href="#创建新的泛型函数-类似于抽象方法" class="headerlink" title="创建新的泛型函数(类似于抽象方法)"></a>创建新的泛型函数(类似于抽象方法)</h4><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">setGeneric(<span class="string">&quot;modColor&quot;</span> , <span class="keyword">function</span>(.Object,name,value) standardGeneric(<span class="string">&quot;modColor&quot;</span>))</span><br><span class="line">setMethod(<span class="string">&quot;modColor&quot;</span>,signature(.Object = <span class="string">&quot;RGBcolor&quot;</span>,</span><br><span class="line">                               name = <span class="string">&quot;character&quot;</span>,</span><br><span class="line">                               value = <span class="string">&quot;numeric&quot;</span>),</span><br><span class="line">          <span class="keyword">function</span>(.Object,name,value)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!name %in% <span class="built_in">c</span>(<span class="string">&quot;r&quot;</span>,<span class="string">&quot;g&quot;</span>,<span class="string">&quot;b&quot;</span>))&#123;</span><br><span class="line">              stop(<span class="string">&quot;rediculous!&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            slot(.Object,name) &lt;- <span class="built_in">as.integer</span>(value)</span><br><span class="line">            hx &lt;- as.hexmode(<span class="built_in">c</span>(.Object@r,.Object@g,.Object@b))</span><br><span class="line">            .Object@label=paste(<span class="built_in">c</span>(<span class="string">&quot;#&quot;</span>,format(hx,width = <span class="number">2</span>)),collapse = <span class="string">&quot;&quot;</span>) </span><br><span class="line">           <span class="built_in">return</span>(.Object)   </span><br><span class="line">          &#125;</span><br><span class="line">) </span><br><span class="line"><span class="comment"># 方法的重载</span></span><br><span class="line">setMethod(<span class="string">&quot;modColor&quot;</span>,signature(.Object = <span class="string">&quot;RGBcolor&quot;</span></span><br><span class="line">                              ),</span><br><span class="line">          <span class="keyword">function</span>(.Object)&#123;</span><br><span class="line">            <span class="built_in">return</span>(.Object)</span><br><span class="line">          &#125;</span><br><span class="line">          </span><br><span class="line">          </span><br><span class="line">          )           </span><br><span class="line"><span class="comment">#================================</span></span><br><span class="line">c2&lt;- RGBcolor(<span class="number">23</span>,<span class="number">62</span>,<span class="number">95</span>)</span><br><span class="line">modColor(c2,<span class="string">&quot;g&quot;</span>,<span class="number">34</span>)</span><br><span class="line">c2@g</span><br><span class="line">c2@label </span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;modColor&quot;</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">62</span></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;#173e5f&quot;</span></span><br><span class="line">c2&lt;- modColor(c2,<span class="string">&quot;g&quot;</span>,<span class="number">34</span>) </span><br><span class="line">c2@g</span><br><span class="line">c2@label</span><br><span class="line">[<span class="number">1</span>] <span class="number">34</span></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;#17225f&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="理解泛型函数底层原理"><a href="#理解泛型函数底层原理" class="headerlink" title="理解泛型函数底层原理"></a>理解泛型函数底层原理</h4><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">hx &lt;- as.hexmode(<span class="built_in">c</span>(<span class="number">100</span>，<span class="number">100</span>，<span class="number">100</span>))</span><br><span class="line">paste(<span class="built_in">c</span>(<span class="string">&quot;#&quot;</span>,hx),collapse = <span class="string">&quot;&quot;</span>)</span><br><span class="line">print(<span class="built_in">c</span>(<span class="string">&quot;#&quot;</span>,hx))</span><br><span class="line">print(hx)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;#100100100&quot;</span></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;64&quot;</span> <span class="string">&quot;64&quot;</span> <span class="string">&quot;64&quot;</span></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;#&quot;</span>   <span class="string">&quot;100&quot;</span> <span class="string">&quot;100&quot;</span> <span class="string">&quot;100&quot;</span></span><br><span class="line"><span class="comment">#==================================</span></span><br><span class="line">view(print)</span><br><span class="line"><span class="keyword">function</span> (x, ...) </span><br><span class="line"><span class="built_in">UseMethod</span>(<span class="string">&quot;print&quot;</span>)</span><br><span class="line"><span class="comment"># R使用泛型函数来处理标记为不同class的数据</span></span><br><span class="line"><span class="comment"># 实际上我们对于某种class的数据，是调用的函数名.class名的对应函数</span></span><br><span class="line"><span class="comment">#==================================</span></span><br><span class="line"><span class="built_in">class</span>(hx)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;hexmode&quot;</span></span><br><span class="line"><span class="comment">#print(hx)实际上是print.hexmode(hx)</span></span><br><span class="line"><span class="comment">#==================================</span></span><br><span class="line">view(print.hexmode)</span><br><span class="line"><span class="keyword">function</span> (x, ...) </span><br><span class="line">&#123;</span><br><span class="line">  print(format(x), ...)</span><br><span class="line">  <span class="built_in">invisible</span>(x)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#==================================</span></span><br><span class="line">view(foramt)</span><br><span class="line"><span class="keyword">function</span> (x, ...) </span><br><span class="line"><span class="built_in">UseMethod</span>(<span class="string">&quot;format&quot;</span>)</span><br><span class="line"><span class="comment">#==================================</span></span><br><span class="line">view(format.hexmode)</span><br><span class="line"><span class="keyword">function</span> (x, width = <span class="literal">NULL</span>, upper.case = <span class="literal">FALSE</span>, ...) </span><br><span class="line">&#123;</span><br><span class="line">  isna &lt;- <span class="built_in">is.na</span>(x)</span><br><span class="line">  y &lt;- <span class="built_in">as.integer</span>(x[!isna])</span><br><span class="line">  fmt0 &lt;- <span class="keyword">if</span> (upper.case) </span><br><span class="line">    <span class="string">&quot;X&quot;</span></span><br><span class="line">  <span class="keyword">else</span> <span class="string">&quot;x&quot;</span></span><br><span class="line">  fmt &lt;- <span class="keyword">if</span> (!is.null(width)) </span><br><span class="line">    paste0(<span class="string">&quot;%0&quot;</span>, width, fmt0)</span><br><span class="line">  <span class="keyword">else</span> paste0(<span class="string">&quot;%&quot;</span>, fmt0)</span><br><span class="line">  ans &lt;- rep.int(<span class="literal">NA_character_</span>, <span class="built_in">length</span>(x))</span><br><span class="line">  ans0 &lt;- sprintf(fmt, y)</span><br><span class="line">  <span class="keyword">if</span> (is.null(width) &amp;&amp; <span class="built_in">length</span>(y) &gt; <span class="number">1L</span>) &#123;</span><br><span class="line">    nc &lt;- <span class="built_in">max</span>(nchar(ans0))</span><br><span class="line">    ans0 &lt;- sprintf(paste0(<span class="string">&quot;%0&quot;</span>, nc, fmt0), y)</span><br><span class="line">  &#125;</span><br><span class="line">  ans[!isna] &lt;- ans0</span><br><span class="line">  <span class="built_in">dim</span>(ans) &lt;- <span class="built_in">dim</span>(x)</span><br><span class="line">  dimnames(ans) &lt;- dimnames(x)</span><br><span class="line">  <span class="built_in">names</span>(ans) &lt;- <span class="built_in">names</span>(x)</span><br><span class="line">  ans</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#===============================</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>-R语言</tag>
      </tags>
  </entry>
  <entry>
    <title>git学习笔记</title>
    <url>/2020/10/23/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h5 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h5><p>主流的版本控制器</p>
<ul>
<li>git</li>
<li>svn</li>
<li>…</li>
</ul>
<p>版本控制分类</p>
<ul>
<li>本地版本控制</li>
<li>集中版本控制（svn）</li>
<li>分布式版本控制（git）</li>
</ul>
<h5 id="git核心原理"><a href="#git核心原理" class="headerlink" title="git核心原理"></a>git核心原理</h5><p>git本地有三个工作区域：</p>
<ul>
<li>工作目录：本地存放代码的位置</li>
<li>暂存区：本质上是一个文件，临时存放改动</li>
<li>资源库：仓库区</li>
<li>远程仓库：GitHub，gitee等</li>
</ul>
<h5 id="git核心命令"><a href="#git核心命令" class="headerlink" title="git核心命令"></a>git核心命令</h5><ul>
<li>add</li>
<li>commit</li>
<li>push</li>
<li>pull</li>
<li>checkout</li>
<li>status</li>
<li>fetch</li>
<li>remote</li>
</ul>
]]></content>
      <tags>
        <tag>-技术工具</tag>
      </tags>
  </entry>
</search>
